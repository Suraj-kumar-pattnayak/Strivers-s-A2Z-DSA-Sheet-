class Solution {
public:

    int BS(int s, int e, vector<int>& nums, int target)
    {
        int n = nums.size();
        while(s <= e)
        {
            int m = s+(e-s)/2;
            
            if(nums[m] == target) return m;
            else if(nums[m] < target) s = m+1;
            else  e = m-1;
        }
        return -1;
    }

    int search(vector<int>& nums, int target) {
        int n = nums.size();
        int s = 0, e = n-1;
        int min_idx;
        while(s <= e)
        {
            int m = s+(e-s)/2;
            int prev = (m-1 + n)%n, next = (m+1)%n; 
            if(nums[m] < nums[prev] and nums[m] < nums[next]) { min_idx =  m;    break;}
            else if(nums[m] < nums[0]) e = m-1;
            else  s = m+1;
        }
        
       int left_search =  BS(0, min_idx-1, nums, target);
       if(left_search != -1) return left_search;
       
       else return BS(min_idx, n-1, nums, target);
    }
};
